name: CI Workflow

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pylint radon autopep8

    # Step to run pylint for linting
    - name: Run pylint for linting
      run: |
        PYTHONPATH=./src pylint src/hw2_debugging.py
      # Runs pylint for linting

    # Step to run radon for cyclomatic complexity analysis
    - name: Run radon for cyclomatic complexity
      run: |
        radon cc src -a
      # Runs radon for cyclomatic complexity analysis

    # Step to run radon for maintainability index analysis
    - name: Run radon for maintainability index
      run: |
        radon mi src
      # Runs radon for maintainability index analysis

    # Step to run radon for radon metrics analysis
    - name: Run radon for metrics analysis
      run: |
        radon raw src
      # Runs radon for radon metrics analysis

    # Step to run pytest and generate coverage report
    - name: Run tests and generate coverage report
      run: |
        PYTHONPATH=./src pytest --cov=. --cov-report=xml --cov-report=term
      # Runs tests and generates coverage report

    # Step to upload coverage report to Codecov
    - name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-coverage
        fail_ci_if_error: true

    # Step to run autopep8 to format code
    - name: autopep8
      run: |
        autopep8 --recursive --in-place --aggressive --aggressive .
      # Runs autopep8 to format the code with aggressive PEP8 fixes

    # Step to commit changes after autopep8 if there are any changes
    - name: Commit changes if autopep8 made changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "GitHub Actions"
        git diff --exit-code || (git checkout -b autopep8-patches && git commit -am "autopep8 action fixes" && git push origin autopep8-patches)
      continue-on-error: true

    # Step to create a pull request if there are changes and a new branch was pushed
    - name: Create Pull Request
      if: success() && steps.Commit_changes_if_autopep8_made_changes.outcome == 'success'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.pulls.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: "Fixes by autopep8 action",
            head: "autopep8-patches",
            base: "main",
            body: "This is an auto-generated PR with fixes by autopep8.",
            labels: ["autopep8", "automated pr"]
          });